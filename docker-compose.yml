x-superset-image: &superset-image apache/superset:latest-dev
x-superset-depends-on: &superset-depends-on
  - postgres
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./scripts/superset:/app/docker
  - superset_home:/app/superset_home

version: '3.8'
services:
  postgres:
    container_name: postgres
    image: postgres:14
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file: 
      - postgres.env
    volumes:
      - ./scripts/create-databases.sh:/docker-entrypoint-initdb.d/create-databases.sh
      - ./csv/supermarket_sales.csv:/tmp/supermarket_sales.csv
  
  clickhouse:
    container_name: clickhouse
    image: clickhouse/clickhouse-server:22.10-alpine
    restart: unless-stopped
    ports:
      - "8123:8123"
      - "9000:9000"
    env_file:
      - clickhouse.env
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
  
  scheduler:
    container_name: airflow-scheduler
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile-airflow
    command: scheduler
    depends_on:
       - postgres
       - clickhouse
    env_file:
       - airflow.env
    volumes:
       - ./dags:/opt/airflow/dags
  
  webserver:
    container_name: airflow-webserver
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile-airflow
    entrypoint: ./scripts/entrypoint.sh
    depends_on:
      - postgres
      - clickhouse
      - scheduler
    env_file:
      - airflow.env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
    ports:
      - "8080:8080"
  
  redis:
    container_name: redis
    restart: unless-stopped
    image: redis:7
  
  superset-init:
    container_name: superset_init
    image: *superset-image
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    command: ["/app/docker/docker-init.sh"]
    env_file: superset.env
    user: "root"
    healthcheck:
      disable: true

  superset:
    container_name: superset_app
    restart: unless-stopped
    image: *superset-image
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    ports:
      - "8088:8088"
    env_file: superset.env

  superset-worker:
    container_name: superset_worker
    restart: unless-stopped
    image: *superset-image
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    user: "root"
    healthcheck:
      test: ["CMD-SHELL", "celery inspect ping -A superset.tasks.celery_app:app -d celery@$$HOSTNAME"]

  superset-worker-beat:
    container_name: superset_worker_beat
    restart: unless-stopped
    image: *superset-image
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    user: "root"
    healthcheck:
      disable: true
    env_file: superset.env

volumes:
  superset_home:
    external: false
